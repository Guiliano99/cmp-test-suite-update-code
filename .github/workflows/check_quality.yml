# SPDX-FileCopyrightText: Copyright 2025 Siemens AG
#
# SPDX-License-Identifier: Apache-2.0

name: Check code quality

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REPO_OWNER: ${{ github.repository_owner }}
  IMAGE_BASE_RAW: ghcr.io/${{ github.repository_owner }}/cmp-test-dev:latest

jobs:
  prepare_env:
    runs-on: ubuntu-22.04
    outputs:
      image_lc: ${{ steps.setenv.outputs.image_lc }}
    steps:
      - name: Set lowercase image name
        id: setenv
        run: |
          IMAGE_LC=$(echo "${{ env.IMAGE_BASE_RAW }}" | tr '[:upper:]' '[:lower:]')
          echo "image_lc=$IMAGE_LC" >> $GITHUB_OUTPUT

  ensure_repo_lowercase:
    needs: prepare_env
    runs-on: ubuntu-22.04
    steps:
      - name: Check if image base is lowercase
        run: |
          if [ "${{ env.IMAGE_BASE_RAW }}" != "${{ needs.prepare_env.outputs.image_lc }}" ]; then
            echo "Repository name or image path must be lowercase. Found: '${{ env.IMAGE_BASE_RAW }}'"
            exit 1
          fi

  ruff_lint:
    needs: ensure_repo_lowercase
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: docker run --rm -v "$PWD:/workspace" -w /workspace "${{ needs.prepare_env.outputs.image_lc }}" ruff check

  license_check:
    needs: ensure_repo_lowercase
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: docker run --rm -v "$PWD:/workspace" -w /workspace "${{ needs.prepare_env.outputs.image_lc }}" reuse lint

  rf_style_check:
    needs: ensure_repo_lowercase
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - run: docker run --rm -v "$PWD:/workspace" -w /workspace "${{ needs.prepare_env.outputs.image_lc }}" robocop check --ignore VAR04

  spelling_check:
    needs: ensure_repo_lowercase
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: >
          docker run --rm -v "$PWD:/workspace" -w /workspace "${{ needs.prepare_env.outputs.image_lc }}"
          codespell . --check-filenames --skip "*.html,*.pem,*.xml,*venv*,*fips/*.py,*/announcement.py"

  dependency_check:
    needs: ensure_repo_lowercase
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:
      - name: Check for outdated dependencies
        run: >
          docker run --rm -v "$PWD:/workspace" -w /workspace "${{ needs.prepare_env.outputs.image_lc }}"
          bash -c 'echo "Checking for outdated packages...";
          OUTDATED=$(pip list --outdated --format=columns);
          if [ -z "$OUTDATED" ]; then echo "All packages are up to date!"; exit 0;
          else echo "Outdated packages detected:"; echo "$OUTDATED"; exit 1; fi'

  version_check:
    needs: ensure_repo_lowercase
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: |
          VERSION=$(cat VERSION)
          if ! grep -E "^# $VERSION" CHANGELOG.md; then
            echo "Error: CHANGELOG.md does not contain an entry for version $VERSION."
            exit 1
          fi

  pylint:
    needs: [ruff_lint, license_check, rf_style_check, spelling_check]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: docker run --rm -v "$PWD:/workspace" -w /workspace "${{ needs.prepare_env.outputs.image_lc }}" pylint --fail-under=9.4 resources

  unit_test:
    needs: [ruff_lint, license_check, rf_style_check, spelling_check]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: >
          docker run --rm -v "$PWD:/workspace" -w /workspace -e OQS_INSTALL_PATH=/root/_oqs
          "${{ needs.prepare_env.outputs.image_lc }}" python3 -m unittest discover -s unit_tests

  type_check:
    needs: ensure_repo_lowercase
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - run: docker run --rm -v "$PWD:/workspace" -w /workspace "${{ needs.prepare_env.outputs.image_lc }}" pyright
