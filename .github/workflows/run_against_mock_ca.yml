# SPDX-FileCopyrightText: Copyright 2025 Siemens AG
#
# SPDX-License-Identifier: Apache-2.0

name: Run against MockCA

on:
  push:
  workflow_dispatch:

jobs:
  prepare_test_env:
    runs-on: ubuntu-22.04
    outputs:
      test_image: ${{ steps.setenv.outputs.test_image }}
    steps:
      - name: Set lowercase test image
        id: setenv
        run: |
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          TEST_IMAGE="ghcr.io/${OWNER_LC}/cmp-test:latest"
          echo "test_image=$TEST_IMAGE" >> "$GITHUB_OUTPUT"

  build_mock_ca_image:
    runs-on: ubuntu-22.04
    outputs:
      artifact_name: mock-ca-image
    steps:
      - uses: actions/checkout@v4

      - name: Build Mock‑CA image (fresh for this workflow)
        run: docker build -t mock-ca:latest -f data/dockerfiles/Dockerfile.mock_ca .

      - name: Save image as tar.gz
        run: docker save mock-ca:latest | gzip > mock-ca.tar.gz

      - name: Upload Mock‑CA image artifact
        uses: actions/upload-artifact@v4
        with:
          name: mock-ca-image
          path: mock-ca.tar.gz


  run_cmp_tests:
    needs: [prepare_test_env, build_mock_ca_image]
    runs-on: ubuntu-22.04
    env:
      IMAGE: ${{ needs.prepare_test_env.outputs.test_image }}
    steps:
      - uses: actions/checkout@v4

      - name: Download Mock‑CA image artifact
        uses: actions/download-artifact@v4
        with:
          name: mock-ca-image

      - name: Load Mock‑CA image
        run: docker load -i mock-ca.tar.gz

      - name: Prepare reports directory
        run: mkdir -p reports

      - name: Start Mock CA
        run: docker run -d --rm --name mock-ca -p 5000:5000 mock-ca:latest

      - name: Wait for Mock CA
        run: |
          for i in {1..30}; do
            if nc -z 127.0.0.1 5000; then echo "Mock CA is up"; exit 0; fi
            echo "Waiting for Mock CA..."; sleep 1;
          done
          echo "Mock CA failed to start"; docker logs mock-ca || true; exit 1

      - name: Run verbose tests
        run: docker run --rm --network host -v "$PWD:/workspace" -w /workspace --entrypoint "" "$IMAGE" robot --pythonpath=./ --exclude smoke --outputdir=reports --variable environment:mock_ca tests

      - name: Stop Mock CA
        if: always()
        run: docker stop mock-ca

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cmp-test-reports
          path: reports

  run_pq_hybrid_tests:
    needs: [prepare_test_env, build_mock_ca_image]
    runs-on: ubuntu-22.04
    env:
      IMAGE: ${{ needs.prepare_test_env.outputs.test_image }}
    steps:
      - uses: actions/checkout@v4

      - name: Download Mock‑CA image artifact
        uses: actions/download-artifact@v4
        with:
          name: mock-ca-image

      - name: Load Mock‑CA image
        run: docker load -i mock-ca.tar.gz

      - name: Prepare reports directory
        run: mkdir -p reports

      - name: Start Mock CA
        run: docker run -d --rm --name mock-ca -p 5000:5000 mock-ca:latest

      - name: Wait for Mock CA
        run: |
          for i in {1..30}; do
            if nc -z 127.0.0.1 5000; then echo "Mock CA is up"; exit 0; fi
            echo "Waiting for Mock CA..."; sleep 1;
          done
          echo "Mock CA failed to start"; docker logs mock-ca || true; exit 1

      - name: Run PQ/Hybrid tests
        run: docker run --rm --network host -v "$PWD:/workspace" -w /workspace --entrypoint "" "$IMAGE" robot --pythonpath=./ --exclude "verbose-testsNOTcomposite-sig" --outputdir=reports --variable environment:mock_ca tests_pq_and_hybrid tests_mock_ca

      - name: Stop Mock CA
        if: always()
        run: docker stop mock-ca

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cmp-test-pq-hybrid-reports
          path: reports

  run_verbose_pq_hybrid_tests:
    needs: [prepare_test_env, build_mock_ca_image]
    runs-on: ubuntu-22.04
    env:
      IMAGE: ${{ needs.prepare_test_env.outputs.test_image }}
    steps:
      - uses: actions/checkout@v4

      - name: Download Mock‑CA image artifact
        uses: actions/download-artifact@v4
        with:
          name: mock-ca-image

      - name: Load Mock‑CA image
        run: docker load -i mock-ca.tar.gz

      - name: Prepare reports directory
        run: mkdir -p reports

      - name: Start Mock CA
        run: docker run -d --rm --name mock-ca -p 5000:5000 mock-ca:latest

      - name: Wait for Mock CA
        run: |
          for i in {1..30}; do
            if nc -z 127.0.0.1 5000; then echo "Mock CA is up"; exit 0; fi
            echo "Waiting for Mock CA..."; sleep 1;
          done
          echo "Mock CA failed to start"; docker logs mock-ca || true; exit 1

      - name: Run PQ/Hybrid verbose tests
        run: docker run --rm --network host -v "$PWD:/workspace" -w /workspace --entrypoint "" "$IMAGE" robot --pythonpath=./ --include "verbose-testsNOTcomposite-sig" --outputdir=reports --variable environment:mock_ca tests_pq_and_hybrid tests_mock_ca

      - name: Stop Mock CA
        if: always()
        run: docker stop mock-ca

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cmp-test-pq-hybrid-verbose-reports
          path: reports
